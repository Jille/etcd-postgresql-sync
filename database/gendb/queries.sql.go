// Code generated by sqlc. DO NOT EDIT.
// source: queries.sql

package gendb

import (
	"context"
)

const addKey = `-- name: AddKey :exec
INSERT INTO etcd.kv (key, value) VALUES ($1, $2)
`

type AddKeyParams struct {
	Key   string
	Value string
}

func (q *Queries) AddKey(ctx context.Context, arg AddKeyParams) error {
	_, err := q.db.Exec(ctx, addKey, arg.Key, arg.Value)
	return err
}

type AddKeysParams struct {
	Key   string
	Value string
}

const deleteAll = `-- name: DeleteAll :exec
DELETE FROM etcd.kv
`

func (q *Queries) DeleteAll(ctx context.Context) error {
	_, err := q.db.Exec(ctx, deleteAll)
	return err
}

const deleteKey = `-- name: DeleteKey :exec
DELETE FROM etcd.kv WHERE key = $1
`

func (q *Queries) DeleteKey(ctx context.Context, key string) error {
	_, err := q.db.Exec(ctx, deleteKey, key)
	return err
}

const updateKey = `-- name: UpdateKey :exec
UPDATE etcd.kv SET value=$1 WHERE key=$2
`

type UpdateKeyParams struct {
	Value string
	Key   string
}

func (q *Queries) UpdateKey(ctx context.Context, arg UpdateKeyParams) error {
	_, err := q.db.Exec(ctx, updateKey, arg.Value, arg.Key)
	return err
}
